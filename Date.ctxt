#BlueJ class context
comment0.params=
comment0.target=Date()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Date\r\n
comment1.params=year\ month\ day
comment1.target=Date(int,\ int,\ int)
comment1.text=\r\n\ Non-default\ constructor.\ \ Institutes\ a\ starting\ Y-M-D\ combination.\r\n\ Constructor\ catches\ invalid\ date\ inputs\r\n\ @param\ year\ measured\ in\ the\ Gregorian\ Calendar,\ or\ Common\ Era,\ and\ validated\ to\ a\ min\ and\ max\r\n\ @param\ month\ a\ whole\ number\ ranging\ between\ (the\ constants)\ JANUARY\ and\ DECEMBER\r\n\ @param\ day\ ranges\ between\ 1\ and\ a\ varying\ monthly\ max;\ validated\ by\ getNumberOfDaysInThisMonth()\r\n
comment10.params=
comment10.target=java.lang.String\ getDayOfTheWeek()
comment10.text=\r\n\ Working\ only\ from\ the\ data\ in\ the\ attributes,\ a\ day,\ month,\ and\ year\r\n\ is\ interpreted\ into\ one\ of\ the\ seven\ days\ of\ the\ week.\r\n\ Assumption\:\ this.year\ shouldn't\ be\ lower\ than\ ERA1\ or\ higher\ than\ ERA6's\ top\ end.\r\n\ \ \ \ The\ assumption\ isn't\ actually\ valid,\ when\ MIN_YEAR\ \=\ 0,\ but\ hey,\ we'll\ roll\ with\ it.\r\n\ @return\ a\ weekday\ literal,\ e.g.\ "Saturday"\r\n
comment11.params=
comment11.target=int\ getNumberOfDaysInThisMonth()
comment11.text=\r\n\ The\ number\ of\ days\ in\ a\ month\ is\ dependent\ entirely\ on\ what\ the\ month\ is.\r\n\ The\ sole\ exception\ to\ this\ rule\ is\ FEBRUARY,\ whose\ count\ goes\ +1\ on\ leap\ years.\r\n\ @return\ some\ number\ between\ 28\ and\ 31;\ used\ as\ an\ upper\ bound\ on\ this.day\r\n
comment12.params=numeral\ digitCount
comment12.target=java.lang.String\ getPaddedNumeral(int,\ short)
comment12.text=\r\n\ This\ helper\ function\ provides\ code\ that\ is\ common\ to\ getPaddedMonth()\ and\ getPaddedDay().\r\n\ A\ padded\ number\ is\ the\ String\ expression\ of\ that\ number.\ \ The\ length\ of\ the\ String\r\n\ is\ forced\ to\ a\ specified\ number\ of\ digits,\ by\ prepending\ zeroes.\r\n\ @param\ numeral\ \ \ \ \ \ \ the\ number\ that\ is\ being\ padded\ and\ converted\ into\ a\ String\r\n\ @param\ digitCount\ \ \ \ the\ intended\ length\ of\ the\ returned\ String;\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Note\ that\ digitCount\ is\ not\ validated.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ It\ is\ possible\ to\ specify\ numeral\=10\ and\ digitCount\=1,\ for\ example.\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ literal\ expression\ of\ a\ number,\ padded\ to\ digitCount\ digits\r\n
comment13.params=
comment13.target=java.lang.String\ getPaddedMonth()
comment13.text=\r\n\ Prepend\ as\ many\ zeroes\ as\ are\ necessary\ to\ produce\ a\ MM\ String.\r\n\ @return\ said\ MM\ String\r\n
comment14.params=
comment14.target=java.lang.String\ getPaddedDay()
comment14.text=\r\n\ Prepend\ as\ many\ zeroes\ as\ are\ necessary\ to\ produce\ a\ DD\ String.\r\n\ @return\ said\ DD\ String\r\n
comment15.params=
comment15.target=java.lang.String\ getFormattedDate()
comment15.text=\r\n\ Translate\ attribute\ information\ into\ a\ YYYY-MM-DD\ date-String.\r\n\ @return\ year-padded(month)-padded(day)\r\n
comment16.params=monthNumber
comment16.target=java.lang.String\ getMonthName(int)
comment16.text=\r\n\ Convert\ a\ month\ index,\ such\ as\ 7,\ into\ the\ corresponding\ month\ word,\ such\ as\ "August".\r\n\ @param\ monthNumber\ \ \ a\ month\ index;\ validated\ to\ the\ range\ JANUARY\ to\ DECEMBER\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ literal\ containing\ the\ name\ of\ a\ month\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ OR\ null,\ when\ validation\ fails\r\n
comment17.params=monthName
comment17.target=int\ getMonthNumber(java.lang.String)
comment17.text=\r\n\ Convert\ a\ month\ word,\ such\ as\ "September",\ into\ the\ corresponding\ month\ index,\ such\ as\ 9.\r\n\ @param\ monthName\ \ \ \ \ a\ literal\ containing\ the\ name\ of\ a\ month;\ matched\ case\ in-sensitive\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ a\ month\ index\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ OR\ the\ 'error\ index'\ (UNKNOWN_MONTH),\ when\ no\ match\r\n
comment18.params=
comment18.target=void\ report()
comment18.text=\r\n\ Method\ which\ implements\ interface\ method\r\n\ report\ the\ date\r\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\r\n\ Method\ toString\ to\ display\ the\ date\ as\ String\r\n
comment2.params=
comment2.target=void\ setDefaults()
comment2.text=\r\n\ This\ is\ a\ common\ consequence\ of\ the\ default\ constructor\r\n\ OR\ a\ set()\ operation\ that\ was\ given\ an\ invalid\ combination\ of\ year,\ month,\ day.\r\n
comment3.params=
comment3.target=int\ getYear()
comment3.text=\r\n\ Accessor.\r\n\ @return\ year\ attribute\r\n
comment4.params=
comment4.target=int\ getMonth()
comment4.text=\r\n\ Accessor.\r\n\ @return\ month\ attribute\r\n
comment5.params=
comment5.target=int\ getDay()
comment5.text=\r\n\ Accessor.\r\n\ @return\ day\ attribute\r\n
comment6.params=year
comment6.target=void\ setYear(int)
comment6.text=\r\n\ Mutator.\r\n\ @param\ year\ a\ whole\ number\ representing\ a\ span\ of\ ~365\ days\ in\ the\ Gregorian\ Calendar\r\n
comment7.params=month
comment7.target=void\ setMonth(int)
comment7.text=\r\n\ Mutator.\r\n\ @param\ month\ a\ whole\ number\ ranging\ between\ JANUARY\ and\ DECEMBER,\ inclusive\r\n
comment8.params=day
comment8.target=void\ setDay(int)
comment8.text=\r\n\ Mutator.\r\n\ @param\ day\ a\ whole\ number\ ranging\ between\ 1\ and\ getNumberOfDaysInThisMonth()\r\n
comment9.params=
comment9.target=boolean\ isLeapYear()
comment9.text=\r\n\ Judging\ solely\ from\ the\ year\ attribute,\r\n\ leaps\ (29\ days\ in\ February,\ as\ opposed\ to\ the\ usual\ 28)\ occur\ on\ year\ numbers\r\n\ evenly\ divisible\ by\ 4,\ with\ some\ exceptions.\r\n\ @return\ true,\ only\ if\ the\ year\ number\ meets\ the\ criteria\r\n
numComments=20
